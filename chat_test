import unittest
from unittest.mock import patch
from io import StringIO
import chatbot  # Import the module you want to test

class TestChatBot(unittest.TestCase):

    @patch('builtins.input', side_effect=['hello', 'exit'])
    def test_chat_with_user(self, mock_input):
        expected_output = "ChatBot: Hi there!\nYou: wats up!\nChatBot: wats up!\nChatBot: Catch you later aligator.\n"
        with StringIO() as fake_output:
            with patch('sys.stdout', fake_output):
                bot = chatbot.ChatBot()
                bot.chat_with_user()
                self.assertEqual(fake_output.getvalue(), expected_output)
                mock_input.assert_called_with("You: ")  # Verify that input was called

    def test_get_response(self):
        bot = chatbot.ChatBot()
        responses = ["That's good to hear!", "Awesome!", "Glad to hear it!"]
        for keyword in ["i'm doing well", "i'm great", "i'm good", "good"]:
            response = bot.get_response(keyword)
            self.assertIn(response, responses)

        response = bot.get_response("not a keyword")
        self.assertEqual(response, "I'm not sure how to respond to that.")

if __name__ == '__main__':
    unittest.main()

