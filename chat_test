import unittest
import chat  # Replace 'chatbot' with the name of your module

class TestChatBot(unittest.TestCase):

    def setUp(self):
        self.chatbot = chat()

    def test_get_response_hello(self):
        response = self.chatbot.get_response("Hello")
        self.assertIn(response, ["Hello!", "Hi there!", "Hey!", "wats up!", "Greetings!"])

    def test_get_response_positive_feeling(self):
        response = self.chatbot.get_response("I'm doing well")
        self.assertIn(response, ["That's good to hear!", "Awesome!", "Glad to hear it!"])

    def test_get_response_what_are_you_doing(self):
        response = self.chatbot.get_response("What are you doing?")
        self.assertIn(response, ["Waiting on your command!", "I'm just hanging out.", "I'm here to chat with you!"])

    def test_get_response_unknown_input(self):
        response = self.chatbot.get_response("Random gibberish")
        self.assertEqual(response, "I'm not sure how to respond to that.")

    def test_get_response_goodbye(self):
        response = self.chatbot.get_response("Goodbye")
        self.assertIn(response, ["Goodbye!", "Have a great day!"])

    def test_chat_with_user_exit(self):
        # Simulate the user typing 'exit' to end the chat
        with unittest.mock.patch('builtins.input', return_value='exit'):
            with unittest.mock.patch('sys.stdout', new_callable=unittest.mock.StringIO) as mock_stdout:
                self.chatbot.chat_with_user()
                output = mock_stdout.getvalue().strip()
                self.assertIn("ChatBot: Goodbye! Have a great day.", output)

if __name__ == '__main__':
    unittest.main()
